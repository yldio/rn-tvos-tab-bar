name: Cut Release

on:
  workflow_dispatch:

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3

      - name: Get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const targetTag = `${process.env.PACKAGE_VERSION}`;
            // API: https://github.com/octokit/plugin-rest-endpoint-methods.js/tree/main/docs/repos
            try {
              const existingReleases = await github.rest.repos.listReleases({
                owner: context.repo.owner,
                repo: context.repo.repo,
              })
              return existingReleases.data.find(release => release.tag_name === targetTag).id
            } catch(err) {
              console.log("No existing release found. Creating a new release for tag: " + process.env.PACKAGE_VERSION)
            }

            // Create a new release
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `${process.env.PACKAGE_VERSION}`,
              name: `v${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install Ref Studio.',
              draft: true,
              generate_release_notes: true,
              prerelease: false
            })
